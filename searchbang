#!/bin/sh

# Author: Abhilash26
# License: GNU Public

# Default settings
OPENBROWSER=1
BROWSER="firefox"
menucommand="fzf --height=10 --prompt"

# Bang file location with all info
BANG_FILE_URL="https://duckduckgo.com/bang.js"
CACHE_FILE_LOCATION="$HOME/.cache/searchbang"
FILE_NAME="bang.json"
BANG_FILE_LOCATION="${CACHE_FILE_LOCATION}/${FILE_NAME}"

# Display help message
show_help() {
    echo "Usage: $(basename "$0") [options] [bang] [search terms]"
    echo "Options:"
    echo "  -h, --help         Show this help message"
    echo "  -o, --openbrowser  Enable or disable opening the browser (1 or 0, default: 1)"
    echo "  -b, --browser      Specify the browser to use (default: firefox)"
    echo "  -m, --menucommand  Specify the menu command (default: fzf)"
    echo "  [bang] [terms]     Search directly by specifying bang and terms"
    echo "If no arguments are supplied, a menu will be used to select the site and terms."
    exit 0
}

# Parse command-line arguments
while [ $# -gt 0 ]; do
    case "$1" in
        -h|--help)
            show_help
            ;;
        -o|--openbrowser)
            OPENBROWSER="$2"
            shift 2
            ;;
        -b|--browser)
            BROWSER="$2"
            shift 2
            ;;
        -m|--menucommand)
            menucommand="$2"
            shift 2
            ;;
        *)
            break
            ;;
    esac
done

# GET BANG List from file
getbang() {
   jq -r '.[] | "[\(.c)] \(.d) \(.t)"' "$1"
}

# Menu wrapper: dynamically uses menucommand
menu() {
    eval "$menucommand '$1'"
}

# Get Bang menu
getbangmenu() {
    getbang "$1" | menu "Search which site?" | awk '{print $NF}'
}

# Get bang url
getbangurl() {
    jq -r --arg bang_text "$2" '.[0:] | .[] | select(.t == $bang_text) | .u' "$1"
}

# Clean search terms
cleansearchterms() {
    echo "$1" | tr ' ' '+'
}

# Build result URL
getresulturl() {
    echo "$1" | sed "s/\{\{\{s\}\}\}/$2/g" | tr -d '"'
}

# Launch browser or print URL
launchbrowser() {
    if [ "$1" -eq 1 ]; then
        "$2" "$3" >/dev/null 2>&1 && exit
    else
        echo "\nResult URL: $3"
    fi
}

# Create cache directory
mkdir -p "$CACHE_FILE_LOCATION"

# Download bang file if not cached
if [ ! -f "$BANG_FILE_LOCATION" ]; then
    echo "Downloading Bang file from $BANG_FILE_URL..."
    curl -s "$BANG_FILE_URL" -o "$BANG_FILE_LOCATION" || { echo "Failed to download bang file."; exit 1; }
    echo "Bang file downloaded."
else
    echo "Cached Bang file exists."
fi

# Main script logic
if [ $# -eq 0 ]; then
    echo "No arguments supplied. Using menu to search for sites."
    BANG="$(getbangmenu "$BANG_FILE_LOCATION")"
    echo "Search for: "
    read -r SEARCH_TERMS
    SEARCH_TERMS="$(cleansearchterms "$SEARCH_TERMS")"
else
    BANG="$1"
    shift
    SEARCH_TERMS="$(cleansearchterms "$*)"
fi

# Process and launch
BANG_URL="$(getbangurl "$BANG_FILE_LOCATION" "$BANG")"
RESULT_URL="$(getresulturl "$BANG_URL" "$SEARCH_TERMS")"
launchbrowser "$OPENBROWSER" "$BROWSER" "$RESULT_URL"
